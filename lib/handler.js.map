{"version":3,"file":"handler.js","sourceRoot":"","sources":["../src/handler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAE/C,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,UAAU,CAC9B,QAAQ,GAAG,EAAE,EACb,OAAoB,EAAE;IAEtB,8BAA8B;IAC9B,MAAM,QAAQ,GAAG,gBAAgB,CAAC,YAAY,EAAE,CAAC;IACjD,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAC5B,QAAQ,CAAC,OAAO,EAChB,MAAM,EACN,QAAQ,CACT,CAAC;IAEF,IAAI,QAAkB,CAAC;IACvB,IAAI;QACF,QAAQ,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC3E;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,gBAAgB,CAAC,YAAY,CAAC,KAAkB,CAAC,CAAC;KAC7D;IAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEnC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;QAChB,MAAM,IAAI,gBAAgB,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAClE;IAED,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\r\n\r\nimport { ServerConnection } from '@jupyterlab/services';\r\n\r\n/**\r\n * Call the API extension\r\n *\r\n * @param endPoint API REST end point for the extension\r\n * @param init Initial values for the request\r\n * @returns The response body interpreted as JSON\r\n */\r\nexport async function requestAPI<T>(\r\n  endPoint = '',\r\n  init: RequestInit = {}\r\n): Promise<T> {\r\n  // Make request to Jupyter API\r\n  const settings = ServerConnection.makeSettings();\r\n  const requestUrl = URLExt.join(\r\n    settings.baseUrl,\r\n    '/api',\r\n    endPoint\r\n  );\r\n\r\n  let response: Response;\r\n  try {\r\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\r\n  } catch (error) {\r\n    throw new ServerConnection.NetworkError(error as TypeError);\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new ServerConnection.ResponseError(response, data.message);\r\n  }\r\n\r\n  return data;\r\n}"]}